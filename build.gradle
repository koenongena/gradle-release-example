import org.gradle.release.Version
import org.gradle.release.Releases
import org.gradle.release.Git

releases = new Releases(new File('releases.xml'), project) {
    String calculateNextVersion(String version) {
        //TODO change this method name and logic
        return "3.0"
    }
}

version = new Version(project)

allprojects  {
	apply plugin: 'java'
	apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'

    sourceCompatibility = 1.6
	targetCompatibility = 1.6
	group = 'be.ebit'
    version = this.version

    repositories {
        mavenLocal()
        mavenCentral()
    }

    ideaModule {
        javaVersion = 1.6
    }
}

//marker task
task releaseVersion

task testedDists(dependsOn: [assemble, check])

def tagNow() {
    def git = new Git(project)
    git.checkNoModifications()
    git.tag("REL_$version", "Release $version")
    git.branch("RB_$version")
}

task testedTag(dependsOn: testedDists) << {
    tagNow()
}

uploadArchives {
    repositories.mavenDeployer {
        snapshotRepository(url: "http://ehq-intra-01.hq.ebit.be:8080/nexus/content/repositories/snapshots") {
            authentication(userName: NEXUS_USER, password: NEXUS_PASSWORD)
        }
        repository(url: "http://ehq-intra-01.hq.ebit.be:8080/nexus/content/repositories/releases") {
            authentication(userName: NEXUS_USER, password: NEXUS_PASSWORD)
        }
    }
}

task distributeReleases(dependsOn: uploadArchives){

}

task releaseArtifacts {
    description = 'Builds the release artifacts'
    group = 'release'
    dependsOn releaseVersion, assemble, distributeReleases
}

task release {
    description = 'Builds, tests and uploads the release artifacts'
    group = 'release'
    dependsOn releaseVersion, testedTag, releaseArtifacts, testedDists
    doLast {
        releases.incrementNextVersion()
        def git = new Git(project)
        git.commit()
    }
}
